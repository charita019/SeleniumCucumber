<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="12" passed="11" failed="1" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-06-02T13:28:01 IST" name="Surefire suite" finished-at="2025-06-02T13:28:40 IST" duration-ms="39045">
    <groups>
      <group name="cucumber">
        <method signature="AbstractTestNGCucumberTests.runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" name="runScenario" class="io.cucumber.testng.AbstractTestNGCucumberTests"/>
      </group> <!-- cucumber -->
    </groups>
    <test started-at="2025-06-02T13:28:01 IST" name="Surefire test" finished-at="2025-06-02T13:28:40 IST" duration-ms="39045">
      <class name="runners.TestRunner">
        <test-method is-config="true" signature="setUpClass(org.testng.ITestContext)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:01 IST" name="setUpClass" finished-at="2025-06-02T13:28:02 IST" duration-ms="884" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[org.testng.TestRunner@364fd4ae]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpClass -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:02 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-02T13:28:13 IST" duration-ms="10521" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login Using Valid User Credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sauce Labs Demo Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:13 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-02T13:28:16 IST" duration-ms="3098" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login using multiple users"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sauce Labs Demo Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:16 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-02T13:28:19 IST" duration-ms="2886" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login using multiple users"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sauce Labs Demo Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:19 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-02T13:28:21 IST" duration-ms="2559" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login using invalid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sauce Labs Demo Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:21 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-02T13:28:24 IST" duration-ms="2493" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login using invalid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sauce Labs Demo Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:24 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-02T13:28:26 IST" duration-ms="2426" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login using invalid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sauce Labs Demo Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:26 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-02T13:28:29 IST" duration-ms="2359" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login using invalid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sauce Labs Demo Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:29 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-02T13:28:31 IST" duration-ms="2418" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login using invalid credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sauce Labs Demo Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:31 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-02T13:28:33 IST" duration-ms="2203" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Login without providing any credentials"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sauce Labs Demo Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:33 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-02T13:28:36 IST" duration-ms="2327" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Check required field validation is coming correctly for password field"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sauce Labs Demo Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:36 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-02T13:28:38 IST" duration-ms="2442" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA["Tab and Enter keys work on the login form"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sauce Labs Demo Login Functionality"]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method signature="runScenario(io.cucumber.testng.PickleWrapper,io.cucumber.testng.FeatureWrapper)[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:38 IST" name="runScenario" description="Runs Cucumber Scenarios" data-provider="scenarios" finished-at="2025-06-02T13:28:40 IST" duration-ms="2328" status="FAIL">
          <params>
            <param index="0">
              <value>
                <![CDATA["Navigate into application after logout using browser back Button"]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA["Sauce Labs Demo Login Functionality"]]>
              </value>
            </param>
          </params>
          <exception class="io.cucumber.testng.UndefinedStepException">
            <message>
              <![CDATA[The step 'User is navigated to Swag Labs Page' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("User is navigated to Swag Labs Page")
public void user_is_navigated_to_swag_labs_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User clicks on logout link")
public void user_clicks_on_logout_link() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User clicks on browser back Button")
public void user_clicks_on_browser_back_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("User should not be logged in and get message as {string}")
public void user_should_not_be_logged_in_and_get_message_as(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
]]>
            </message>
            <full-stacktrace>
              <![CDATA[io.cucumber.testng.UndefinedStepException: The step 'User is navigated to Swag Labs Page' and 3 other step(s) are undefined.
You can implement these steps using the snippet(s) below:

@When("User is navigated to Swag Labs Page")
public void user_is_navigated_to_swag_labs_page() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User clicks on logout link")
public void user_clicks_on_logout_link() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@When("User clicks on browser back Button")
public void user_clicks_on_browser_back_button() {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}
@Then("User should not be logged in and get message as {string}")
public void user_should_not_be_logged_in_and_get_message_as(String string) {
    // Write code here that turns the phrase above into concrete actions
    throw new io.cucumber.java.PendingException();
}

at io.cucumber.core.runtime.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:69)
at io.cucumber.testng.TestCaseResultObserver.assertTestCasePassed(TestCaseResultObserver.java:23)
at io.cucumber.testng.TestNGCucumberRunner.lambda$runScenario$1(TestNGCucumberRunner.java:136)
at io.cucumber.core.runtime.CucumberExecutionContext.lambda$runTestCase$5(CucumberExecutionContext.java:136)
at io.cucumber.core.runtime.RethrowingThrowableCollector.executeAndThrow(RethrowingThrowableCollector.java:23)
at io.cucumber.core.runtime.CucumberExecutionContext.runTestCase(CucumberExecutionContext.java:136)
at io.cucumber.testng.TestNGCucumberRunner.runScenario(TestNGCucumberRunner.java:132)
at io.cucumber.testng.AbstractTestNGCucumberTests.runScenario(AbstractTestNGCucumberTests.java:35)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103)
at java.base/java.lang.reflect.Method.invoke(Method.java:580)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:141)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:686)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:230)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:63)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:992)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:203)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:154)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:134)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)
at org.testng.TestRunner.privateRun(TestRunner.java:739)
at org.testng.TestRunner.run(TestRunner.java:614)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:421)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:413)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:373)
at org.testng.SuiteRunner.run(SuiteRunner.java:312)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:95)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1274)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1208)
at org.testng.TestNG.runSuites(TestNG.java:1112)
at org.testng.TestNG.run(TestNG.java:1079)
at org.apache.maven.surefire.testng.TestNGExecutor.run(TestNGExecutor.java:155)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.executeSingleClass(TestNGDirectoryTestSuite.java:102)
at org.apache.maven.surefire.testng.TestNGDirectoryTestSuite.execute(TestNGDirectoryTestSuite.java:91)
at org.apache.maven.surefire.testng.TestNGProvider.invoke(TestNGProvider.java:137)
at org.apache.maven.surefire.booter.ForkedBooter.runSuitesInProcess(ForkedBooter.java:385)
at org.apache.maven.surefire.booter.ForkedBooter.execute(ForkedBooter.java:162)
at org.apache.maven.surefire.booter.ForkedBooter.run(ForkedBooter.java:507)
at org.apache.maven.surefire.booter.ForkedBooter.main(ForkedBooter.java:495)
]]>
            </full-stacktrace>
          </exception> <!-- io.cucumber.testng.UndefinedStepException -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- runScenario -->
        <test-method is-config="true" signature="tearDownClass()[pri:0, instance:runners.TestRunner@703580bf]" started-at="2025-06-02T13:28:40 IST" name="tearDownClass" finished-at="2025-06-02T13:28:40 IST" duration-ms="25" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- tearDownClass -->
      </class> <!-- runners.TestRunner -->
    </test> <!-- Surefire test -->
  </suite> <!-- Surefire suite -->
</testng-results>
